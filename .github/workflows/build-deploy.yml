name: build & deploy

on:
  workflow_dispatch:
  push:
    branches:
      - '**'


concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: package.json    
      - name: install yarn
        shell: bash
        run: corepack enable
      - run: yarn
      - run: yarn lint
      - run: yarn typecheck

  build:
    runs-on: ubuntu-latest
    needs: ci
    if: github.ref == 'refs/heads/main'
    outputs:
      TAG_VERSION: ${{ steps.version.outputs.TAG_VERSION }}
    steps:
      - id: version
        name: set version
        run: |
          echo "TAG_VERSION=$(date +'%y-%m-%d').$GITHUB_RUN_NUMBER" >> $GITHUB_ENV
          echo "TAG_VERSION=$(date +'%y-%m-%d').$GITHUB_RUN_NUMBER" >> $GITHUB_OUTPUT

      - name: Checkout
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to harbor.riwi.dev registry
        uses: docker/login-action@v3
        with:
          registry: harbor.riwi.dev
          username: ${{ secrets.HARBOR_USER }}
          password: ${{ secrets.HARBOR_TOKEN }}
      - name: Build and push frontend
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          build-args: |
            NPM_TOKEN=${{ secrets.NPM_TOKEN }}
            GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
          push: true
          cache-from: type=registry,ref=harbor.riwi.dev/philiplehmann/ml-talk:buildcache
          cache-to: type=registry,ref=harbor.riwi.dev/philiplehmann/ml-talk:buildcache,mode=max,image-manifest=true
          tags: |
            harbor.riwi.dev/philiplehmann/ml-talk:latest
            harbor.riwi.dev/philiplehmann/ml-talk:${{ env.TAG_VERSION }}
  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: git pull
        run: git pull --rebase --autostash --depth=10 --no-tags
      - uses: philiplehmann/setup-kustomize@v2.2.3
      - name: deploy
        run: |
          cd kustomize/ml-talk
          kustomize edit set image harbor.riwi.dev/philiplehmann/ml-talk=harbor.riwi.dev/philiplehmann/ml-talk:${{needs.build.outputs.TAG_VERSION}}
      - name: Commit & Push changes
        uses: actions-js/push@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          message: Set image tag to `${{needs.build.outputs.TAG_VERSION}}`
